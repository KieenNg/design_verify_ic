
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Questa Coverage Report</title>
  <link rel="StyleSheet" media="screen" href="../css/hdl2html.css"/>
</head>
<body id="hdl2html">
  <tt>
<pre>
<a name="1"><q-n>     1  </q-n></a>`<q-i>include</q-w> <q-l>"data_defs.v"</q-l>
<a name="2"><q-n>     2  </q-n></a>
<a name="3"><q-n>     3  </q-n></a><q-w>module</q-w> Top(		
<a name="4"><q-n>     4  </q-n></a>			clock, reset, enable_ex, src1, src2, imm, control_in, 
<a name="5"><q-n>     5  </q-n></a>			mem_data_read_in, mem_data_write_out, mem_write_en, aluout,
<a name="6"><q-n>     6  </q-n></a>			carry
<a name="7"><q-n>     7  </q-n></a>			);
<a name="8"><q-n>     8  </q-n></a>    <q-w>parameter</q-w>   instr_wd  	=   `INSTR_WIDTH;
<a name="9"><q-n>     9  </q-n></a>    <q-w>parameter</q-w>   reg_wd    	=   `REGISTER_WIDTH;
<a name="10"><q-n>     10  </q-n></a>    <q-w>parameter</q-w>   imm_wd    	=   `IMMEDIATE_WIDTH;
<a name="11"><q-n>     11  </q-n></a>
<a name="12"><q-n>     12  </q-n></a>    <q-w>input</q-w> 					            clock, reset, enable_ex;
<a name="13"><q-n>     13  </q-n></a>	<q-w>input</q-w>  	 		[reg_wd -1:0]       src1, src2; 
<a name="14"><q-n>     14  </q-n></a>	<q-w>input</q-w> 	 		[reg_wd -1:0]       imm;
<a name="15"><q-n>     15  </q-n></a>	<q-w>input</q-w> 		    [6:0]			    control_in;
<a name="16"><q-n>     16  </q-n></a>    <q-m>// the data that was read in the Decode stage</q-m>
<a name="17"><q-n>     17  </q-n></a>	<q-w>input</q-w>	 		[reg_wd	-1:0]		mem_data_read_in; 
<a name="18"><q-n>     18  </q-n></a>    <q-m>// data that is going to be written to the memory </q-m>
<a name="19"><q-n>     19  </q-n></a>	<q-w>output</q-w>  	    [reg_wd -1:0]       mem_data_write_out; 
<a name="20"><q-n>     20  </q-n></a>    <q-w>output</q-w>					            mem_write_en;  
<a name="21"><q-n>     21  </q-n></a>	<q-w>output</q-w>	 		[reg_wd -1:0]		aluout;
<a name="22"><q-n>     22  </q-n></a>	<q-w>output</q-w>								carry;
<a name="23"><q-n>     23  </q-n></a>	
<a name="24"><q-n>     24  </q-n></a>	<q-w>wire</q-w>  	 		[reg_wd -1:0]       aluin1, aluin2; 
<a name="25"><q-n>     25  </q-n></a>	<q-w>wire</q-w>	     	[2:0]			    opselect;
<a name="26"><q-n>     26  </q-n></a>	<q-w>wire</q-w>	        [2:0]               operation;	
<a name="27"><q-n>     27  </q-n></a>	<q-w>wire</q-w>            [4:0]          		shift_number;
<a name="28"><q-n>     28  </q-n></a>    <q-w>wire</q-w>                           		enable_shift, enable_arith;
<a name="29"><q-n>     29  </q-n></a>	
<a name="30"><q-n>     30  </q-n></a>
<a name="31"><q-n>     31  </q-n></a>	Ex_Preproc  Preproc_Inst (   
<a name="32"><q-n>     32  </q-n></a>		.clock(clock), .reset(reset), .enable_ex(enable_ex), 
<a name="33"><q-n>     33  </q-n></a>		.src1(src1), .src2(src2), .imm(imm), .control_in(control_in), 
<a name="34"><q-n>     34  </q-n></a>        .mem_data_read_in(mem_data_read_in), .mem_data_write_out(mem_data_write_out), 
<a name="35"><q-n>     35  </q-n></a>		.mem_write_en(mem_write_en), .aluin1(aluin1), .aluin2(aluin2), 
<a name="36"><q-n>     36  </q-n></a>		.opselect_out(opselect), .operation_out(operation), .shift_number(shift_number), 
<a name="37"><q-n>     37  </q-n></a>		.enable_shift(enable_shift), .enable_arith(enable_arith) 
<a name="38"><q-n>     38  </q-n></a>	);
<a name="39"><q-n>     39  </q-n></a>
<a name="40"><q-n>     40  </q-n></a>	ALU ALU_inst  (   	
<a name="41"><q-n>     41  </q-n></a>		.clock(clock), .reset(reset), .aluin1(aluin1), .aluin2(aluin2), 
<a name="42"><q-n>     42  </q-n></a>		.opselect(opselect), .operation(operation), .enable_shift(enable_shift), 
<a name="43"><q-n>     43  </q-n></a>		.enable_arith(enable_arith), .shift_number(shift_number), 
<a name="44"><q-n>     44  </q-n></a>		.aluout(aluout), .carry(carry)
<a name="45"><q-n>     45  </q-n></a>	);
<a name="46"><q-n>     46  </q-n></a>
<a name="47"><q-n>     47  </q-n></a>
<a name="48"><q-n>     48  </q-n></a>    
<a name="49"><q-n>     49  </q-n></a><q-w>endmodule</q-w>
<a name="50"><q-n>     50  </q-n></a>
<a name="51"><q-n>     51  </q-n></a>
</pre>
</tt>

  
</body>
</html>
