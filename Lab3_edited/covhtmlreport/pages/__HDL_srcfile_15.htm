
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Questa Coverage Report</title>
  <link rel="StyleSheet" media="screen" href="../css/hdl2html.css"/>
</head>
<body id="hdl2html">
  <tt>
<pre>
<a name="1"><q-n>     1  </q-n></a>`<q-i>include</q-w> <q-l>"<a href="__HDL_srcfile_14.htm">ReceiverBase.sv</a>"</q-l>
<a name="2"><q-n>     2  </q-n></a><q-w>class</q-w> Receiver <q-w>extends</q-w> ReceiverBase;
<a name="3"><q-n>     3  </q-n></a><q-m>//  mailbox out_box;	// Scoreboard mailbox</q-m>
<a name="4"><q-n>     4  </q-n></a>  	<q-w>typedef</q-w> mailbox #(OutputPacket) rx_box_type;
<a name="5"><q-n>     5  </q-n></a>  	rx_box_type 	rx_out_box;		<q-m>// mailbox for Packet objects To Scoreboard </q-m>
<a name="6"><q-n>     6  </q-n></a>	<q-m>//int 			numpackets;</q-m>
<a name="7"><q-n>     7  </q-n></a>   	<q-w>extern</q-w> <q-w>function</q-w> <q-w>new</q-w>(<q-w>string</q-w> name = <q-l>"Receiver"</q-l>, rx_box_type rx_out_box, <q-w>virtual</q-w> Execute_io.TB Execute, <q-w>virtual</q-w> DUT_probe_if Prober);
<a name="8"><q-n>     8  </q-n></a>   	<q-w>extern</q-w> <q-w>virtual</q-w> <q-w>task</q-w> start();
<a name="9"><q-n>     9  </q-n></a><q-w>endclass</q-w>
<a name="10"><q-n>     10  </q-n></a>
<a name="11"><q-n>     11  </q-n></a><q-w>function</q-w> Receiver::<q-w>new</q-w>(<q-w>string</q-w> name, rx_box_type rx_out_box, <q-w>virtual</q-w> Execute_io.TB Execute, <q-w>virtual</q-w> DUT_probe_if Prober);
<a name="12"><q-n>     12  </q-n></a>  <q-w>super</q-w>.<q-w>new</q-w>(name, Execute, Prober);
<a name="13"><q-n>     13  </q-n></a>  <q-m>//if (TRACE_ON) $display("[TRACE]%0d %s:%m", $time, name);</q-m>
<a name="14"><q-n>     14  </q-n></a>  <q-w>this</q-w>.rx_out_box = rx_out_box;
<a name="15"><q-n>     15  </q-n></a>  <q-m>//this.numpackets = numpackets;</q-m>
<a name="16"><q-n>     16  </q-n></a><q-w>endfunction</q-w>
<a name="17"><q-n>     17  </q-n></a>
<a name="18"><q-n>     18  </q-n></a><q-w>task</q-w> Receiver::start();
<a name="19"><q-n>     19  </q-n></a>	<q-w>int</q-w> i;
<a name="20"><q-n>     20  </q-n></a>	i = 0;
<a name="21"><q-n>     21  </q-n></a>  <q-m>//if (TRACE_ON) $display("[TRACE]%0d %s:%m", $time, name);</q-m>
<a name="22"><q-n>     22  </q-n></a>	$display($<q-w>time</q-w>, <q-l>"[RECEIVER]  RECEIVER STARTED"</q-l>);
<a name="23"><q-n>     23  </q-n></a>	@ (Execute.cb); <q-m>// to cater to the one cycle delay in the pipeline</q-m>
<a name="24"><q-n>     24  </q-n></a>	<q-w>fork</q-w>
<a name="25"><q-n>     25  </q-n></a>		<q-w>forever</q-w>
<a name="26"><q-n>     26  </q-n></a>		<q-w>begin</q-w>
<a name="27"><q-n>     27  </q-n></a>			recv();
<a name="28"><q-n>     28  </q-n></a>			rx_out_box.put(pkt2cmp);
<a name="29"><q-n>     29  </q-n></a>			$display($<q-w>time</q-w>, <q-l>"[RECEIVER]  Payload Obtained"</q-l>);
<a name="30"><q-n>     30  </q-n></a>			i++;
<a name="31"><q-n>     31  </q-n></a>			<q-m>//if (i == numpackets)</q-m>
<a name="32"><q-n>     32  </q-n></a>			<q-m>//begin</q-m>
<a name="33"><q-n>     33  </q-n></a>			<q-m>//	break;</q-m>
<a name="34"><q-n>     34  </q-n></a>			<q-m>//end</q-m>
<a name="35"><q-n>     35  </q-n></a>		<q-w>end</q-w>	
<a name="36"><q-n>     36  </q-n></a>	<q-w>join_none</q-w>
<a name="37"><q-n>     37  </q-n></a>	$display ($<q-w>time</q-w>, <q-l>"[RECEIVER] Forking of Process Finished"</q-l>);
<a name="38"><q-n>     38  </q-n></a><q-w>endtask</q-w>
<a name="39"><q-n>     39  </q-n></a>
</pre>
</tt>

  
</body>
</html>
