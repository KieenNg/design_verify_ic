
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Questa Coverage Report</title>
  <link rel="StyleSheet" media="screen" href="../css/hdl2html.css"/>
</head>
<body id="hdl2html">
  <tt>
<pre>
<a name="1"><q-n>     1  </q-n></a>`<q-i>include</q-w> <q-l>"data_defs.v"</q-l>
<a name="2"><q-n>     2  </q-n></a>`<q-i>include</q-w> <q-l>"<a href="__HDL_srcfile_9.htm">Packet.sv</a>"</q-l>
<a name="3"><q-n>     3  </q-n></a><q-w>class</q-w> DriverBase;
<a name="4"><q-n>     4  </q-n></a>	<q-w>virtual</q-w>   Execute_io.TB Execute;	
<a name="5"><q-n>     5  </q-n></a>	<q-w>string</q-w>    name;		
<a name="6"><q-n>     6  </q-n></a>	Packet    pkt2send;	
<a name="7"><q-n>     7  </q-n></a>
<a name="8"><q-n>     8  </q-n></a>	<q-w>reg</q-w>	[6:0]					payload_control_in;
<a name="9"><q-n>     9  </q-n></a>	<q-w>reg</q-w>	[`REGISTER_WIDTH-1:0]	payload_src1, payload_src2;
<a name="10"><q-n>     10  </q-n></a>	<q-w>reg</q-w>	[`REGISTER_WIDTH-1:0]	payload_imm, payload_mem_data;
<a name="11"><q-n>     11  </q-n></a>	<q-w>reg</q-w>							payload_enable;
<a name="12"><q-n>     12  </q-n></a>
<a name="13"><q-n>     13  </q-n></a>	<q-w>extern</q-w> <q-w>function</q-w> <q-w>new</q-w>(<q-w>string</q-w> name = <q-l>"DriverBase"</q-l>, <q-w>virtual</q-w> Execute_io.TB Execute);
<a name="14"><q-n>     14  </q-n></a>	<q-w>extern</q-w> <q-w>virtual</q-w> <q-w>task</q-w> send();
<a name="15"><q-n>     15  </q-n></a>	<q-w>extern</q-w> <q-w>virtual</q-w> <q-w>task</q-w> send_payload();
<a name="16"><q-n>     16  </q-n></a><q-w>endclass</q-w>
<a name="17"><q-n>     17  </q-n></a>
<a name="18"><q-n>     18  </q-n></a><q-w>function</q-w> DriverBase::<q-w>new</q-w>(<q-w>string</q-w> name = <q-l>"DriverBase"</q-l>, <q-w>virtual</q-w> Execute_io.TB Execute);
<a name="19"><q-n>     19  </q-n></a>	<q-w>this</q-w>.name   = name;
<a name="20"><q-n>     20  </q-n></a>	<q-w>this</q-w>.Execute = Execute;
<a name="21"><q-n>     21  </q-n></a><q-w>endfunction</q-w>
<a name="22"><q-n>     22  </q-n></a>
<a name="23"><q-n>     23  </q-n></a><q-w>task</q-w> DriverBase::send();
<a name="24"><q-n>     24  </q-n></a>	send_payload();
<a name="25"><q-n>     25  </q-n></a><q-w>endtask</q-w>
<a name="26"><q-n>     26  </q-n></a>
<a name="27"><q-n>     27  </q-n></a><q-w>task</q-w> DriverBase::send_payload();
<a name="28"><q-n>     28  </q-n></a>	$display($<q-w>time</q-w>, <q-l>"ns:  [DRIVER] Sending Payload Begin"</q-l>);
<a name="29"><q-n>     29  </q-n></a>	
<a name="30"><q-n>     30  </q-n></a>	Execute.cb.src1			&lt;=	payload_src1;
<a name="31"><q-n>     31  </q-n></a>	Execute.cb.src2			&lt;=	payload_src2;
<a name="32"><q-n>     32  </q-n></a>	Execute.cb.imm			&lt;=	payload_imm;
<a name="33"><q-n>     33  </q-n></a>	Execute.cb.mem_data_read_in	&lt;=	payload_mem_data;
<a name="34"><q-n>     34  </q-n></a>	Execute.cb.control_in 		&lt;=  	payload_control_in;
<a name="35"><q-n>     35  </q-n></a>	Execute.cb.enable_ex		&lt;=  	payload_enable;
<a name="36"><q-n>     36  </q-n></a>	
<a name="37"><q-n>     37  </q-n></a>	<q-m>// This is where we would be sending the data out into a queue for the Scoreboard</q-m>
<a name="38"><q-n>     38  </q-n></a>		
<a name="39"><q-n>     39  </q-n></a><q-w>endtask</q-w>
</pre>
</tt>

  
</body>
</html>
