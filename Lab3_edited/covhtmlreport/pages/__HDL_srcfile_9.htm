
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Questa Coverage Report</title>
  <link rel="StyleSheet" media="screen" href="../css/hdl2html.css"/>
</head>
<body id="hdl2html">
  <tt>
<pre>
<a name="1"><q-n>     1  </q-n></a>`<q-i>include</q-w> <q-l>"data_defs.v"</q-l>
<a name="2"><q-n>     2  </q-n></a>`ifndef PACKET_SV
<a name="3"><q-n>     3  </q-n></a>`<q-a>define</q-w> PACKET_SV
<a name="4"><q-n>     4  </q-n></a><q-w>class</q-w> Packet;
<a name="5"><q-n>     5  </q-n></a>
<a name="6"><q-n>     6  </q-n></a>	<q-w>rand</q-w>	<q-w>reg</q-w>	[`REGISTER_WIDTH-1:0] 	src1;		 
<a name="7"><q-n>     7  </q-n></a>	<q-w>rand</q-w>	<q-w>reg</q-w>	[`REGISTER_WIDTH-1:0] 	src2;		 
<a name="8"><q-n>     8  </q-n></a>	<q-w>rand</q-w>	<q-w>reg</q-w>	[`REGISTER_WIDTH-1:0] 	imm;		
<a name="9"><q-n>     9  </q-n></a>	<q-w>rand</q-w>	<q-w>reg</q-w>	[`REGISTER_WIDTH-1:0] 	mem_data;		
<a name="10"><q-n>     10  </q-n></a>	<q-w>rand</q-w>	<q-w>reg</q-w>				immp_regn_op_gen;
<a name="11"><q-n>     11  </q-n></a>	<q-w>rand</q-w>	<q-w>reg</q-w> 	[2:0]			operation_gen;
<a name="12"><q-n>     12  </q-n></a>	<q-w>rand</q-w>	<q-w>reg</q-w> 	[2:0]			opselect_gen;
<a name="13"><q-n>     13  </q-n></a>	
<a name="14"><q-n>     14  </q-n></a>	<q-w>reg</q-w>					enable;
<a name="15"><q-n>     15  </q-n></a>	<q-w>string</q-w> 	name;
<a name="16"><q-n>     16  </q-n></a>	
<a name="17"><q-n>     17  </q-n></a>	<q-w>constraint</q-w> Limit {
<a name="18"><q-n>     18  </q-n></a>		src1 <q-w>inside</q-w>	{[0:65534]};
<a name="19"><q-n>     19  </q-n></a>		src2 <q-w>inside</q-w>	{[0:65534]};
<a name="20"><q-n>     20  </q-n></a>		imm <q-w>inside</q-w>	{[0:65534]};
<a name="21"><q-n>     21  </q-n></a>		mem_data <q-w>inside</q-w>	{[0:65534]};
<a name="22"><q-n>     22  </q-n></a>		
<a name="23"><q-n>     23  </q-n></a>		opselect_gen <q-w>inside</q-w> {[0:1], [4:5]};	<q-m>//these are the only valid inputs </q-m>
<a name="24"><q-n>     24  </q-n></a>		<q-m>//opselect_gen inside {[1:1]};	//arith only </q-m>
<a name="25"><q-n>     25  </q-n></a>		
<a name="26"><q-n>     26  </q-n></a>		<q-w>if</q-w> ((opselect_gen == `ARITH_LOGIC)){
<a name="27"><q-n>     27  </q-n></a>			operation_gen <q-w>inside</q-w> {[0:7]};
<a name="28"><q-n>     28  </q-n></a>		}
<a name="29"><q-n>     29  </q-n></a>		<q-w>else</q-w> <q-w>if</q-w> ((opselect_gen == `SHIFT_REG)) {
<a name="30"><q-n>     30  </q-n></a>			immp_regn_op_gen <q-w>inside</q-w> {0};
<a name="31"><q-n>     31  </q-n></a>			operation_gen <q-w>inside</q-w> {[0:3]};
<a name="32"><q-n>     32  </q-n></a>		}
<a name="33"><q-n>     33  </q-n></a>		<q-w>else</q-w> <q-w>if</q-w> ((opselect_gen == `MEM_READ)) {
<a name="34"><q-n>     34  </q-n></a>			immp_regn_op_gen <q-w>inside</q-w> {1};
<a name="35"><q-n>     35  </q-n></a>			operation_gen <q-w>inside</q-w> {[0:4]};
<a name="36"><q-n>     36  </q-n></a>		}
<a name="37"><q-n>     37  </q-n></a>		<q-w>else</q-w> <q-w>if</q-w> ((opselect_gen == `MEM_WRITE)) {
<a name="38"><q-n>     38  </q-n></a>			immp_regn_op_gen <q-w>inside</q-w> {1};
<a name="39"><q-n>     39  </q-n></a>			operation_gen <q-w>inside</q-w> {[0:7]}; <q-m>// just make sure it does not matter</q-m>
<a name="40"><q-n>     40  </q-n></a>		}
<a name="41"><q-n>     41  </q-n></a>	}
<a name="42"><q-n>     42  </q-n></a>	
<a name="43"><q-n>     43  </q-n></a>	<q-w>extern</q-w> <q-w>function</q-w> <q-w>new</q-w>(<q-w>string</q-w> name = <q-l>"Packet"</q-l>);
<a name="44"><q-n>     44  </q-n></a><q-w>endclass</q-w>
<a name="45"><q-n>     45  </q-n></a>
<a name="46"><q-n>     46  </q-n></a><q-w>function</q-w> Packet::<q-w>new</q-w>(<q-w>string</q-w> name = <q-l>"Packet"</q-l>);
<a name="47"><q-n>     47  </q-n></a>	<q-w>this</q-w>.name = name;
<a name="48"><q-n>     48  </q-n></a><q-w>endfunction</q-w>
<a name="49"><q-n>     49  </q-n></a>`<q-a>endif</q-w>
</pre>
</tt>

  
</body>
</html>
