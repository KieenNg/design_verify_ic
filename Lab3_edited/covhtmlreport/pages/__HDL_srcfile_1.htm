
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Questa Coverage Report</title>
  <link rel="StyleSheet" media="screen" href="../css/hdl2html.css"/>
</head>
<body id="hdl2html">
  <tt>
<pre>
<a name="1"><q-n>     1  </q-n></a>`<q-i>include</q-w> <q-l>"data_defs.v"</q-l>
<a name="2"><q-n>     2  </q-n></a><q-w>interface</q-w> Execute_io(<q-w>input</q-w> <q-w>bit</q-w> clock);
<a name="3"><q-n>     3  </q-n></a>  	<q-w>parameter</q-w>   instr_wd  	=   `INSTR_WIDTH; <q-m>//=32</q-m>
<a name="4"><q-n>     4  </q-n></a>  	<q-w>parameter</q-w>   reg_wd    	=   `REGISTER_WIDTH; <q-m>//=32</q-m>
<a name="5"><q-n>     5  </q-n></a>  	<q-w>parameter</q-w>   imm_wd    	=   `IMMEDIATE_WIDTH; <q-m>//=16</q-m>
<a name="6"><q-n>     6  </q-n></a> 
<a name="7"><q-n>     7  </q-n></a>  	<q-w>logic</q-w>			reset, enable_ex;
<a name="8"><q-n>     8  </q-n></a>  	<q-w>logic</q-w> 	[reg_wd -1:0]   src1, src2; 
<a name="9"><q-n>     9  </q-n></a>  	<q-w>logic</q-w> 	[reg_wd -1:0]   imm;
<a name="10"><q-n>     10  </q-n></a>  	<q-w>logic</q-w> 	[6:0]		control_in;
<a name="11"><q-n>     11  </q-n></a>  	<q-w>logic</q-w>	[reg_wd	-1:0]	mem_data_read_in; 
<a name="12"><q-n>     12  </q-n></a>
<a name="13"><q-n>     13  </q-n></a>  	<q-w>logic</q-w>  	[reg_wd -1:0]   mem_data_write_out; 
<a name="14"><q-n>     14  </q-n></a>  	<q-w>logic</q-w>			mem_write_en;  
<a name="15"><q-n>     15  </q-n></a>   	<q-w>logic</q-w> 	[reg_wd -1:0]	aluout;
<a name="16"><q-n>     16  </q-n></a> 	<q-w>logic</q-w>			carry;  
<a name="17"><q-n>     17  </q-n></a>
<a name="18"><q-n>     18  </q-n></a>  	<q-w>clocking</q-w> cb @(<q-a>posedge</q-w> clock);
<a name="19"><q-n>     19  </q-n></a>    	<q-w>default</q-w> <q-w>input</q-w> #1 <q-w>output</q-w> #1;
<a name="20"><q-n>     20  </q-n></a>		
<a name="21"><q-n>     21  </q-n></a>		<q-w>output</q-w> 	enable_ex;
<a name="22"><q-n>     22  </q-n></a>   		<q-w>output</q-w>	src1, src2; 
<a name="23"><q-n>     23  </q-n></a>   		<q-w>output</q-w> 	imm;
<a name="24"><q-n>     24  </q-n></a>   		<q-w>output</q-w> 	control_in;
<a name="25"><q-n>     25  </q-n></a>   		<q-w>output</q-w>	mem_data_read_in; 
<a name="26"><q-n>     26  </q-n></a>   		<q-w>input</q-w>	mem_data_write_out; 
<a name="27"><q-n>     27  </q-n></a>   		<q-w>input</q-w>	mem_write_en;  
<a name="28"><q-n>     28  </q-n></a>   		<q-w>input</q-w>	aluout;
<a name="29"><q-n>     29  </q-n></a>   		<q-w>input</q-w>	carry;		
<a name="30"><q-n>     30  </q-n></a>  	<q-w>endclocking</q-w>
<a name="31"><q-n>     31  </q-n></a>
<a name="32"><q-n>     32  </q-n></a>	<q-w>modport</q-w> TB(<q-w>clocking</q-w> cb, <q-w>output</q-w> reset);
<a name="33"><q-n>     33  </q-n></a><q-w>endinterface</q-w>
<a name="34"><q-n>     34  </q-n></a>
<a name="35"><q-n>     35  </q-n></a><q-w>interface</q-w> DUT_probe_if(	
<a name="36"><q-n>     36  </q-n></a>	<q-w>input</q-w> <q-w>logic</q-w> [`REGISTER_WIDTH-1:0]	aluin1, 
<a name="37"><q-n>     37  </q-n></a>	<q-w>input</q-w> <q-w>logic</q-w> [`REGISTER_WIDTH-1:0]	aluin2, 
<a name="38"><q-n>     38  </q-n></a>	<q-w>input</q-w> <q-w>logic</q-w> [2:0]			opselect,
<a name="39"><q-n>     39  </q-n></a>	<q-w>input</q-w> <q-w>logic</q-w> [2:0]			operation,
<a name="40"><q-n>     40  </q-n></a>	<q-w>input</q-w> <q-w>logic</q-w> [4:0]      			shift_number,
<a name="41"><q-n>     41  </q-n></a>	<q-w>input</q-w> <q-w>logic</q-w> 				enable_shift, 
<a name="42"><q-n>     42  </q-n></a>	<q-w>input</q-w> <q-w>logic</q-w> 				enable_arith 
<a name="43"><q-n>     43  </q-n></a>	);
<a name="44"><q-n>     44  </q-n></a><q-w>endinterface</q-w>
<a name="45"><q-n>     45  </q-n></a>	
</pre>
</tt>

  
</body>
</html>
